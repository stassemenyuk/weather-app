{"version":3,"sources":["components/weather-block/WeatherBlock.js","components/weather-panel/WeatherPanel.js","components/searchPanel/SearchPanel.js","components/weather-page/WeatherPage.js","components/app/App.js","index.js"],"names":["WeatherBlock","props","useState","error","setError","isLoaded","setLoadingIndicator","data","setData","currentDate","setCurrentDate","useEffect","nameOfTheCity","name","fetch","then","response","json","city","country","sys","temperature","Math","floor","main","temp","feelLike","feels_like","minTemperature","temp_min","maxTemperature","temp_max","description","weather","icon","timezoneOffset","timezone","Date","getTime","toUTCString","replace","catch","interval","setInterval","clearInterval","className","onClick","onRemove","src","alt","WeatherPanel","blocks","names","map","item","index","title","onClear","SearchPanel","input","setInput","add","setAdd","action","onSubmit","e","preventDefault","findCity","type","value","onChange","target","prev","checked","id","htmlFor","WeatherPage","setNames","setTitle","href","i","slice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0c7a5f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './WeatherBlock.css';\r\n\r\nexport default function WeatherBlock(props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setLoadingIndicator] = useState(false);\r\n  const [data, setData] = useState(0);\r\n  const [currentDate, setCurrentDate] = useState('');\r\n\r\n  function getData(nameOfTheCity) {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${nameOfTheCity}&appid=94731d9912fc64a38073a172fa1f0800`,\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setError(null);\r\n        setLoadingIndicator(true);\r\n        setData({\r\n          city: data.name,\r\n          country: data.sys.country,\r\n          temperature: Math.floor(data.main.temp - 273) + '째C',\r\n          feelLike: Math.floor(data.main.feels_like - 273) + '째C',\r\n          minTemperature: Math.floor(data.main.temp_min - 273) + '째C',\r\n          maxTemperature: Math.floor(data.main.temp_max - 273) + '째C',\r\n          description: data.weather[0].description,\r\n          icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\r\n          timezoneOffset: data.timezone,\r\n        });\r\n        setCurrentDate(\r\n          new Date(new Date().getTime() + data.timezone * 1000).toUTCString().replace(/ GMT$/, ''),\r\n        );\r\n      })\r\n      .catch(() => {\r\n        setLoadingIndicator(true);\r\n        setError(true);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData(props.name);\r\n  }, [props.name]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentDate(\r\n        new Date(new Date().getTime() + data.timezoneOffset * 1000)\r\n          .toUTCString()\r\n          .replace(/ GMT$/, ''),\r\n      );\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [data]);\r\n\r\n  const {\r\n    city,\r\n    country,\r\n    icon,\r\n    temperature,\r\n    feelLike,\r\n    description,\r\n    minTemperature,\r\n    maxTemperature,\r\n  } = data;\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"weather-card\">\r\n        <div className=\"close-btn\" onClick={props.onRemove}>\r\n          X\r\n        </div>\r\n        <div className=\"error__text\">\r\n          Something went wrong... :{'('} <br />\r\n          Maybe you write the name wrong\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (!isLoaded) {\r\n    return <div className=\"weather-card\">Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"weather-card\">\r\n        <div className=\"close-btn\" onClick={props.onRemove}>\r\n          X\r\n        </div>\r\n        <div className=\"weather__date\">{currentDate}</div>\r\n        <div className=\"weather__location\">\r\n          {city} , {country}\r\n        </div>\r\n\r\n        <div className=\"weather__today\">\r\n          {minTemperature} to {maxTemperature}\r\n        </div>\r\n        <div className=\"weather__temperature\">\r\n          <div className=\"weather__temperature__icon\">\r\n            <img src={icon} alt=\"icon\" />\r\n          </div>\r\n          <div className=\"weather__temperature__number\">\r\n            {temperature} <br /> <span className=\"temperature__feeling\">Feels like {feelLike}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather__short-description\">{description}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport WeatherBlock from '../weather-block/WeatherBlock';\r\n\r\nimport './WeatherPanel.css';\r\n\r\nexport default function WeatherPanel(props) {\r\n  const blocks = props.names.map((item, index) => {\r\n    return <WeatherBlock onRemove={() => props.onRemove(index)} name={item} key={index} />;\r\n  });\r\n  return (\r\n    <div className=\"weather-panel\">\r\n      <div className=\"weather-panel__title\">\r\n        <div className=\"title__text\">{props.title}</div>\r\n        <div className=\"title_clearBtn\">\r\n          <button onClick={props.onClear} className=\"btn btn-danger\">\r\n            Clear list\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather-panel__blocks\">{blocks}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './SearchPanel.css';\r\n\r\nexport default function SearchPanel(props) {\r\n  const [input, setInput] = useState('');\r\n  const [add, setAdd] = useState(true);\r\n  return (\r\n    <div className=\"search-panel\">\r\n      <div className=\"search-panel__title\">Write down the name of the city</div>\r\n      <form\r\n        className=\"search-form\"\r\n        action=\"\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          setInput('');\r\n          setAdd(true);\r\n          props.findCity(input, add);\r\n        }}>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n        />\r\n        <div className=\"radio-input\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              onChange={() => {\r\n                setAdd((prev) => !prev);\r\n              }}\r\n              checked={!add}\r\n              type=\"radio\"\r\n              id=\"choice2\"\r\n              name=\"contact\"\r\n              value=\"only\"></input>\r\n            <label className=\"form-check-label\" htmlFor=\"choice2\">\r\n              Search <b>only</b> for this city\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              onChange={() => {\r\n                setAdd((prev) => !prev);\r\n              }}\r\n              className=\"form-check-input\"\r\n              checked={add}\r\n              type=\"radio\"\r\n              id=\"choice1\"\r\n              name=\"contact\"\r\n              value=\"add\"></input>\r\n            <label className=\"form-check-label\" htmlFor=\"choice1\">\r\n              Add City to the list\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"submit-btn\">\r\n          <input type=\"submit\" value=\"submit\" className=\"btn btn-success\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport WeatherPanel from '../weather-panel/WeatherPanel';\r\nimport SearchPanel from '../searchPanel/SearchPanel';\r\n\r\nimport './WeatherPage.css';\r\n\r\nexport default function WeatherPage() {\r\n  const [names, setNames] = useState(['London', 'Berlin', 'Madrid', 'Kyiv']);\r\n  const [title, setTitle] = useState('Your list');\r\n\r\n  function findCityByName(name, add) {\r\n    if (name === '') {\r\n      return;\r\n    }\r\n    if (!add) {\r\n      setNames([name]);\r\n      setTitle(`Weather in ${name}`);\r\n    } else {\r\n      setNames((prev) => [name, ...prev]);\r\n      setTitle('Your list');\r\n    }\r\n  }\r\n\r\n  function clearList() {\r\n    setNames([]);\r\n  }\r\n\r\n  function removeItem(i) {\r\n    setNames((prev) => {\r\n      return [...prev.slice(0, i), ...prev.slice(i + 1)];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"weather-app\">\r\n      <div className=\"container\">\r\n        <div className=\"warning-text\">\r\n          This web-app was made by Stas Semenyuk using{' '}\r\n          <a href=\"https://openweathermap.org/api\" target=\"blank\">\r\n            OpenWeatherMap Api\r\n          </a>\r\n        </div>\r\n        <SearchPanel findCity={findCityByName} />\r\n        <WeatherPanel onClear={clearList} onRemove={removeItem} names={names} title={title} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport WeatherPage from '../weather-page/WeatherPage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <WeatherPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}